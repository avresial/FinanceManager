@using FinanceManager.Domain.Entities.Accounts
@using System.ComponentModel.DataAnnotations
@using FinanceManager.Domain.Entities.Accounts.Entries
@using FinanceManager.Domain.Enums
@using FinanceManager.Domain.Repositories
@using FinanceManager.Components.CustomValidationAttributes
@using FinanceManager.Domain.Repositories.Account

<MudForm @ref="_form" @bind-IsValid="@_success" @bind-Errors="@_errors">
    <MudContainer MaxWidth="MaxWidth.Medium">

        <MudGrid Justify="Justify.Center">
            <MudItem xs="12" sm="12" md="12">
                <MudText Typo="Typo.h4">Add new entry</MudText>
                <MudText Typo="Typo.subtitle1">@BankAccount.Name</MudText>
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudDatePicker Label="Posting date" @bind-Date="_postingDate" Validation="@(new NotInFutureAttribute())" />
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudTimePicker Label="Time" @bind-Time="_time" Validation="@(new NotInFutureAttributeTime(_postingDate))" />
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudNumericField Required="true" HideSpinButtons="true" @bind-Value="BalanceChange" Label="Balance change" Variant="Variant.Text" AdornmentText="@_currency.ShortName" Adornment="Adornment.End" />
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudSelect T="string" Label="Label" MultiSelection="true" @bind-Value="_labelValue" @bind-SelectedValues="_selectedLabels">
                    @foreach (var state in _possibleLabels.Select(x => x.Name))
                    {
                        <MudSelectItem T="string" Value="@state">@state</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="12">
                <MudTextField @bind-Value="Description" T="string" Label="Description" Variant="Variant.Text" MaxLines="5" AutoGrow="true" />
            </MudItem>
            <MudItem xs="12">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false" OnClick=Add>Add</MudButton>
                <MudButton Variant="Variant.Outlined" Color="Color.Secondary" DropShadow="false" OnClick=Cancel Class="mx-2">Cancel</MudButton>
                @if (CustomButton is not null)
                {
                    @CustomButton
                }
            </MudItem>
            
            @if (_errors.Any())
            {
                <MudItem xs="12">
                    @foreach (var error in _errors)
                    {
                        <MudAlert Severity="Severity.Error">@error</MudAlert>
                                            }
                </MudItem>
            }
        </MudGrid>
    </MudContainer>
</MudForm>