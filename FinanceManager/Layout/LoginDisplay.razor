@using FinanceManager.Core.Entities.Login
@using FinanceManager.Core.Services
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NavigationManager Navigation
@inject ILoginService LoginService

@* <AuthorizeView>
    <Authorized>
        Hello, @context.User.Identity?.Name!
        <button class="nav-link btn btn-link" @onclick="BeginLogOut">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView> *@


@if (userSession is null)
{
    <div class="">
        @("Username")
    </div>
    <div class="px-2">
        <NavLink href="login" class="mx-1" Match="NavLinkMatch.All">
            Login
        </NavLink>
    </div>
}
else
{
    @($"{userSession.UserName}")
   @*  <div class="px-2">
        <NavLink href="loginout" class="mx-1" Match="NavLinkMatch.All">
            Logout
        </NavLink>
    </div> *@
}

@code {
    UserSession? userSession { get; set; }

    protected override async Task OnInitializedAsync()
    {
        userSession = await LoginService.GetLoggedUser();
    }

    public void BeginLogOut()
    {
        Navigation.NavigateToLogout("login");
    }
    string showState = "show";

    public void DropdownToggle()
    {
        if (showState == "show")
            showState = "";
        else
            showState = "show";
    }
}
