@using FinanceManager.Core.Enums
@using FinanceManager.Core.Repositories

@inject IBankAccountRepository bankAccountRepository;


<div class="card" style="height:@Height;">
	<div class="card-body">
		<h5 class="card-title">Spending</h5>
		<ul class="list-group list-group-flush">
			@foreach (var entry in Data)
			{
				<li class="list-group-item">
					@* <i class="bi bi-house"></i>  *@
					@entry.ExpenseType - @entry.Value
				</li>
			}
		</ul>
	</div>
</div>

@code
{

	[Parameter]
	public string Height { get; set; } = "300px";

	List<SpendingCathegoryOverviewEntry> Data = new List<SpendingCathegoryOverviewEntry>();
	protected override async Task OnInitializedAsync()
	{
		await Task.Run(() =>
		{
			var bankAccounts = bankAccountRepository.Get(new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1), DateTime.Now).Where(x => x.Entries.Any());

			foreach (var account in bankAccounts)
			{
				foreach (var entry in account.Entries.Where(x => x.BalanceChange < 0))
				{
					var key = entry.ExpenseType.ToString();
					var entryElement = Data.FirstOrDefault(x => x.ExpenseType == entry.ExpenseType);

					if (entryElement is not null)
					{
						entryElement.Value += -entry.BalanceChange;
					}
					else
					{
						Data.Add(new SpendingCathegoryOverviewEntry() { ExpenseType = entry.ExpenseType, Value = -entry.BalanceChange });
					}
				}
			}

			Data = Data.OrderByDescending(x => x.Value).ToList();
		});
	}

	private class SpendingCathegoryOverviewEntry
	{
		public ExpenseType ExpenseType { get; set; }
		public decimal Value { get; set; }
	}

}