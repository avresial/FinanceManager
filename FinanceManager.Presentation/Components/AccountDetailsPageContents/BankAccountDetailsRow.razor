@using FinanceManager.Core.Entities.Accounts
<MudExpansionPanel>
    <TitleContent>
        <div class="row">
            <div class="col-4">
                <div class="row text-muted mb-1">
                    <div style="font-size:0.8rem !important">
                        Balance
                    </div>
                </div>
                <div class="row">
                    <div>
                        @BankAccountEntry.Value @currency
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div class="row text-muted mb-1">
                    <div style="font-size:0.8rem !important">
                        Change
                    </div>
                </div>
                <div class="row">
                    @if (BankAccountEntry.ValueChange > 0)
                    {
                        <div class="text-success">
                            @BankAccountEntry.ValueChange @currency
                        </div>
                    }
                    else
                    {
                        <div class="text-danger">
                            @BankAccountEntry.ValueChange @currency
                        </div>
                    }

                </div>
            </div>
            <div class="col-4">
                <div class="row text-muted mb-1">
                    <div style="font-size:0.8rem !important">
                        PostingDate
                    </div>
                </div>
                <div class="row">
                    <div>
                        @BankAccountEntry.PostingDate.ToString("yyyy-MM-dd")
                    </div>
                </div>
            </div>
        </div>
    </TitleContent>

    <ChildContent>
        <div class="row">
            <div class="col-12 mt-4">
                <div class="row">
                    <div class="col-6">
                        <div class="row text-muted">
                            <div style="font-size:0.8rem !important">
                                Type
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div>
                                @BankAccountEntry.ExpenseType
                            </div>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="row text-muted">
                            <div style="font-size:0.8rem !important">
                                Posting date
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div>
                                @BankAccountEntry.PostingDate
                            </div>
                        </div>
                    </div>

                    <div class="col-12">
                        <div class="row text-muted">
                            <div style="font-size:0.8rem !important">
                                Description
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div>
                                @BankAccountEntry.Description
                            </div>
                        </div>
                    </div>

                    <MudButton Class="col-6" Variant="Variant.Text" OnClick=ShowEditOverlay>Edit</MudButton>
                    <MudButton Class="col-6" Variant="Variant.Text" OnClick=ShowRemoveOverlay Color="Color.Error">Remove</MudButton>
                </div>
            </div>
        </div>
    </ChildContent>
</MudExpansionPanel>

<MudOverlay Visible="@(UpdateEntryVisibility||RemoveEntryVisibility)" DarkBackground="true">
    <MudPaper Class="p-5">
        @if (UpdateEntryVisibility)
        {
            <UpdateBankEntry BankAccount=BankAccount BankAccountEntry="BankAccountEntry" ActionCompleted="HideOverlay" />
        }
        else if (RemoveEntryVisibility)
        {
            <RemoveBankEntry BankAccount=BankAccount BankAccountEntry="BankAccountEntry" ActionCompleted="HideOverlay" />
        }
    </MudPaper>
</MudOverlay>
@code {
    bool _expanded = false;
    public async Task HideOverlay()
    {
        UpdateEntryVisibility = false;
        RemoveEntryVisibility = false;
        StateHasChanged();
    }
    public async Task ShowEditOverlay()
    {
        UpdateEntryVisibility = true;
        StateHasChanged();
    }
    public async Task ShowRemoveOverlay()
    {
        RemoveEntryVisibility = true;
        StateHasChanged();
    }

    private bool RemoveEntryVisibility;
    private bool UpdateEntryVisibility;
    private void OnExpandCollapseClick()
    {
        _expanded = !_expanded;
    }

    internal string currency = "PLN";
    [Parameter]
    public required BankAccount BankAccount { get; set; }

    [Parameter]
    public required BankAccountEntry BankAccountEntry { get; set; }

}
